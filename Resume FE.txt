>>>>>>>>>>>>>>>>>>>>>>>>> Day 1 <<<<<<<<<<<<<<<<<<<<<<<<<<<<

* Pengenalan WEB Dev
* Pengenanalan HTML, CSS dan JS
* Web development workflow and career
* IDE introduction
- VsCode, Sublime Text, IJ

* node.JS
* npm install
* hacker rank, leet code, freeCodeCamp


>>>>>>>>>>>>>>>>>>>>>>>> Day 2 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<

* Algoritma pemrograman dasar javascript 1
- Algoritma
- flow chart 
- pseudocode
- pengenalan JS 
- instalassi node.JS
- Googling tips

* karakteristik Algoritma
- limited
- unambigous
- has inputs and outputs
- effective

* algoritma - structure basic
- sekuensial, process yang lurus
- seleksi/kondisi, has a junction
- perulangan/looping

* Latihan, Algoritma penjumlahan 2 angka

* flowchart, draws.io 
- flowchart notasi

* Pseudocode, mirip dengan kode tapi ditulis dengan bahasa sederhana tanpa aturan baku dalam penulisan
* Pengenalan javascript
* instalasi node.JS


>>>>>>>>>>>>>>>>>>>>>>>> Day 3 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<

* Algoritma pemrogrmana dasar javascript 2
1. tipe data
- js adalah dynamic typing, tipe data dinamis. 
- tipe data : string, number, boolean, null, undefined, object, function, array.
- null sdh didefenisian tapi tidak ada nilai
- let, var, const.
- string interpolation/backtick
- object terdiri dari key and value
- array bisa mnemapung object
- array bisa bernialai array atau memiliki multidimensi
- pada sebuah function walaupun  bertipe data key consta namun nilai dari key bisa diubah

2. input/output
- npm install readline-sync, tujuan agar bisa menambahkan input/berinteraksi
- npm, paket library, framework dll
- perbedaan package.json dan package-lock.json
- nvm use [version]

3. opertaror angka 
- prefix : --x
- postfix : x++

4. operator logika
- negasi/kebalikan (-)

5. operator komparasis
- equal, not equal, greater than, less than.
- membandingkan value saja : ==
- komparasi value dan tipe data : ===


>>>>>>>>>>>>>>>>>>>>>>>> Day 4 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* Algoritma pemrograman dasar javascript 3
* conditional statement
- if,  else, else if
* ternary operator
* equality comparisons
* coercion, diubah/konversi otomatis
* conversion, konversi manual
* truthy and falsy values
- null, undefined,false, nan, 0, ""

* switch statement
- using stritch equals "==="

* loops and iteration
- for, while, do while
- DRY, Don't repeat yourself
- template literal/backtick
- infinity loop

* for of
* for in,object

>>>>>>>>>>>>>>>>>>>>>>>> Day 5 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* Algoritma pemrograman dasar javascript 4
1. Basic data structure
- tipe data primitif, tipe data yang hanya bisa menampung 1 jenis tipe data

* array
- index and element
- shallow copy  
- deep copy: Array.from();
- array method

2. understanding array & object
* object, non primitive-values
* key and value
* object constructor & object literal
* deep copy pada oject : Object.Assign({}, object)

>>>>>>>>>>>>>>>>>>>>>>>> live coding : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* array

>>>>>>>>>>>>>>>>>>>>>>>> Day 6 Algoritma pemrograman dasar 5 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. function
- camalCase
- hoisted
* function scope
* var, global scope
* recursion
* nested function and closure
* predefine function, fungsi bawaan
* function expression
* bilangan fibonacci

2. lodash, library
* library and framework
* npm install lodash
* lodash documentation
- lodash version
- lodash first and last
- lodash chunking
- lodash random 
- lodash shuffle
- lodash times/brp kali
- lodash delay, ada javascript sudah ada async
- lodash range

>>>>>>>>>>>>>>>>>>>>>>>> Day 7 Algoritma pemrograman dasar 6 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. scope variables concept
* global scope
* function scope
* block scope
* module scope
- type module for import export

* var, function scope variable => menjadi scope global


2. spread operator
* menyebarkan data array/object

3. rest opertaror
* destructuring, unpack array/object
* destructuring function

>>>>>>>>>>>>>>>>>>>>>>>> Day 8 Algoritma pemrograman dasar 7 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. OOP 
* class
- constructor
- variabel/properti
- fungsi


* encapsulation
- this. bisa diakses didalam kelas, sedangkan let/const/non-this hanya bisa diakses didalam constructor

* abstraction 
- wajib mengimplementasi methodparent class

* inheritance
- pewarisan 

* polymorphism
- override
- overloading

2. class 


>>>>>>>>>>>>>>>>>>>>>>>> Live coding2 <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* array

>>>>>>>>>>>>>>>>>>>>>>>> Day 9 Algoritma pemrograman dasar 8 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1 OOP lanjutan
* assign fungction kedalam variabel
* functional class

* import-export
- menngunakan module, tidak bisa diketik pada browser
- export default diluar curly bracket dan hanya bisa 1 dari 1 file
-  menyederhanakan nama file dengan 'as'


>>>>>>>>>>>>>>>>>>>>>>>> Day 10 Algoritma pemrograman dasar 9 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. bubble sort

2. binary search


>>>>>>>>>>>>>>>>>>>>>>>> Day 11 Coding Test : <<<<<<<<<<<<<<<<<<<<<<<<<<<<

>>>>>>>>>>>>>>>>>>>>>>>> Day 12 HTML1 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* hypertwxt markup language
1. pengenalan HTML
2. fungsi HTML
3. struktu sintaks HTML
4. tag, element, attribute
- self closing tag
5. semantic and non-semantic
6. block and inline
7. nested element, suatu element mengandung banyak element
8. Heading : h1 samapai h6
9. text element
10. hyperlink
* internal
* external
* target
- _self
- _blank
- _parent
- _top
11. identitas : Id, class, ...
12. html membandingkan
* image
* video
* audio
* iframe

>>>>>>>>>>>>>>>>>>>>>>>> Day 13 HTML2 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. list
* ordered list
- value : A,A,i,I,1

* unordered list
* description list

2. table
* table, thead, tbody, tr, td, th
* attribute
- border
- cellpadding
- rowspan
- colspan

3. from
* input
* button
* select
* text Area
* attribute
- name, method, action, value, placeholder
* type
- radio, checkbox, text, email, number, 


>>>>>>>>>>>>>>>>>>>>>>>> Day 14 CSS1 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* CSS tidak bisa berdiri sendiri
* CSS import
- inline
- internal
- external

1. CSS Syntax
* Selector, property, value

2. CSS selector
* Class, tanda titik
* Id, tanda pagar
* Tag, nama tag
* Attribute, 
- contoh : input[type=text]{}
* Universal, tanda *

3. color
* named color
* hex color
* rgb
* rgba, a = alpha channel for opacity

4. Font
* font-family
- google font :
* font-weight
* font-size
* line height

5. Text Alignment
- justify
- inherit

6. List
* orderedl list
* unordered list
* list-style-type
* list-style-images
* list style position

7. CSS Specificity
* inline
* Id
* class
* Tag
* Universal

>>>>>>>>>>>>>>>>>>>>>>>> Day 15 CSS2 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. Span and div
* span membunkus sepanjang element
* div membungkus 1 baris penuh 

2. border properties
* box model 
* shorthand
-  1 = semua sisi, 2 = atas-bawah, 3 = atas-bawah, kiri, kanan, 4 = kiri-kanan, atas, kanan, bawah atas
* border properties
- border width
- border style
- border color
- border radius

3. width and height

4. layout
* float : left, right
* position : static, fixed, sticky, relative, absolute
* Display: 
- inline
- block
- inline-block
- grid
- none, hidden 
- flex : flex-direction, flex column, etc


>>>>>>>>>>>>>>>>>>>>>>>> Day 16 Career Preparation : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* CV ATS 
* CV Creative

>>>>>>>>>>>>>>>>>>>>>>>> Day 17 Bootstrap 1 : <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* framework front-end agar lebih rresponsive
* rwd, responsive web-developer
1. introduction Bootstrap
* pre-made html/CSS
* javascript-widgets
* mobile first, resonsive layout
* not support IE 10/11
* how to install, use cdn : cloud delivery network
- create new index.html and and meta = "viewport"
- add link and script 
1. buka website bootstrap
2. copas file html, css, js dan popovers, unutk menggunakan utility dropdown, select dll


2. viewport
* area di komputer diabawah navbar

3. frontend layout
4. container and grid
5. images
6. media query

